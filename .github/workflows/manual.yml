name: Test For xmllint

on:
  workflow_dispatch:

jobs:
  save_and_upload_env:
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write'
      contents: 'write'
      security-events: 'write'
      # actions: 'write'
    if: contains('refs/heads/main', github.ref)
    env: 
     OPENSPEC_FILE: 'openapi2.yml'
    steps:
    - name: 'Clone Repository'
      uses: actions/checkout@v2

    # - name: Setup Java
    #   uses: actions/setup-java@v4.0.0
    #   with:
    #     java-version: '17'
    #     distribution: 'adopt'

    # - name: Run Test Cases
    #   run: |
    #       mvn clean install
          
    # - name: Read pom.xml file
    #   id: read
    #   run: |
    #     GROUP_ID=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \
    #                       -Dexpression=project.groupId -q -DforceStdout)
        
    #     ARTIFACT_ID=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \
    #                       -Dexpression=project.artifactId -q -DforceStdout)
        
    #     VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \
    #                       -Dexpression=project.version -q -DforceStdout)
    #     echo "GID=$GROUP_ID" >> $GITHUB_OUTPUT
    #     echo "Artifact id of the package is -> $ARTIFACT_ID"
    #     echo "Version of the package is -> $VERSION"

    # - name: Check github output
    #   if: ${{ steps.read.outputs.GID != '' }}
    #   run: |
    #     echo "Got the GID as => ${{ steps.read.outputs.GID }}"
    # - name: 'Save Secrets to File'
    #   run: |
    #     echo "${{ secrets.ENV_MASTER }}"
    #     echo "${{ secrets.ENV_MASTER }}" > sample.env.txt
    
    # - name: 'Upload File to Share'
    #   run: |
    #     curl -k -u ${{ secrets.SHARE_USER }}:${{ secrets.SHARE_PASS }} -T ./sample.env.txt \
    #     https://share.vphrase.com/remote.php/dav/files/tiyaskar/
    # - name: Cache APT packages
    #   uses: actions/cache@v2
    #   id: cache-apt
    #   with:
    #     path: /var/cache/apt
    #     key: apt-cache-${{ runner.os }}-libxml2-utils
    #     restore-keys: |
    #       apt-cache-${{ runner.os }}

    # - name: Install dependencies
    #   if: steps.cache-apt.outputs.cache-hit != 'true'
    #   run: |
    #     sudo apt-get -y install libxml2-utils
    # - name: Get xmllint version info
    #   run: |
    #       xmllint --version
    # - name: 'Scan docker image'
    #   uses: aquasecurity/trivy-action@0.20.0
    #   with:
    #     image-ref: docker.io/nginx:latest
    #     format: 'sarif'
    #     exit-code: '0'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'HIGH,CRITICAL'
    #     output: 'trivy-result.sarif'

    # - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: 'trivy-result.sarif'
    - name: Edit openapi spec file
      env:
       API_AUTHORIZATIONURL: 'https://abc.com/authorize'
       X_GOOGLE_AUDIENCES: 'https://abc.com'
       X_GOOGLE_ISSUER: 'https://abc.com.auth0.com'
       X_GOOGLE_JWT_URL: 'https://abc.com.auth0.com/.well-known/jwks.json'
      run: |
        FILE_PATH='./${{env.OPENSPEC_FILE}}'
        sed -i "s|\${api_auth0_authorizationUrl}|${{env.API_AUTHORIZATIONURL}}|g" "$FILE_PATH"
        sed -i "s|\${api_auth0_audience}|${{env.X_GOOGLE_AUDIENCES}}|g" "$FILE_PATH"
        sed -i "s|\${api_auth0_issuer}|${{env.X_GOOGLE_ISSUER}}|g" "$FILE_PATH"
        sed -i "s|\${api_auth0_jwksUri}|${{env.X_GOOGLE_JWT_URL}}|g" "$FILE_PATH"
        mv ${{env.OPENSPEC_FILE}} spec.tpl.yaml
    - name: Verify change
      run: |
        tail -n 20 ./spec.tpl.yaml
    - name: upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: openapi2
        path: spec.tpl.yaml
        overwrite: true
        retention-days: 1

    - name: download artifact
      uses: actions/download-artifact@v4
      with:
        name: openapi2
        path: ./

    - name: verify download
      run: ls -lahrt

    - name: view contents
      run: tail -n 10 ./spec.tpl.yaml
      
    

